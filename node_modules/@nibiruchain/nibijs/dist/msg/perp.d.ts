import { EncodeObject, GeneratedType } from "@cosmjs/proto-signing";
import { MsgAddMargin, MsgClosePosition, MsgDonateToEcosystemFund, MsgMultiLiquidate, MsgMarketOrder, MsgRemoveMargin, MsgPartialClose } from "@nibiruchain/protojs/dist/nibiru/perp/v2/tx";
import { TxMessage } from "./encode-types";
export declare const PERP_MSG_TYPE_URLS: {
    MsgAddMargin: string;
    MsgRemoveMargin: string;
    MsgMultiLiquidate: string;
    MsgMarketOrder: string;
    MsgClosePosition: string;
    MsgDonateToEcosystemFund: string;
    MsgPartialClose: string;
};
export declare const perpTypes: ReadonlyArray<[string, GeneratedType]>;
export interface MsgAddMarginEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgAddMargin>;
}
export declare const isMsgAddMarginEncodeObject: (encodeObject: EncodeObject) => boolean;
export interface MsgRemoveMarginEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgRemoveMargin>;
}
export declare const isMsgRemoveMarginEncodeObject: (encodeObject: EncodeObject) => boolean;
export interface MsgMultiLiquidateEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgMultiLiquidate>;
}
export declare const isMsgMultiLiquidateEncodeObject: (encodeObject: EncodeObject) => boolean;
export interface MsgOpenPositionEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgMarketOrder>;
}
export declare const isMsgOpenPositionEncodeObject: (encodeObject: EncodeObject) => boolean;
export interface MsgClosePositionEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgClosePosition>;
}
export declare const isMsgClosePositionEncodeObject: (encodeObject: EncodeObject) => boolean;
export interface MsgDonateToEcosystemFundEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgDonateToEcosystemFund>;
}
export declare const isMsgDonateToEcosystemFundEncodeObject: (encodeObject: EncodeObject) => boolean;
export interface MsgPartialCloseEncodeObject extends EncodeObject {
    readonly typeUrl: string;
    readonly value: Partial<MsgPartialClose>;
}
export declare const isMsgPartialCloseEncodeObject: (encodeObject: EncodeObject) => boolean;
export declare class PerpMsgFactory {
    static removeMargin(msg: MsgRemoveMargin): TxMessage;
    /**
     * Returns a 'TxMessage' for adding margin to a position
     *
     * @static
     * @param {MsgAddMargin} msg - Message to add margin
     * @returns {TxMessage} - formatted version of MsgAddMargin
     */
    static addMargin(msg: MsgAddMargin): TxMessage;
    static liquidate(msg: MsgMultiLiquidate): TxMessage;
    static openPosition(msg: {
        sender: string;
        pair: string;
        goLong: boolean;
        quoteAssetAmount: number;
        baseAssetAmountLimit?: number;
        leverage: number;
    }): TxMessage;
    static closePosition(msg: MsgClosePosition): TxMessage;
    static partialClosePosition(msg: MsgPartialClose): TxMessage;
    static donateToPerpEF(msg: MsgDonateToEcosystemFund): TxMessage;
}
//# sourceMappingURL=perp.d.ts.map